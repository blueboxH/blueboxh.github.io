<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>bluebox&#39;s box</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bluebox.org.cn/"/>
  <updated>2018-10-10T01:03:50.669Z</updated>
  <id>https://bluebox.org.cn/</id>
  
  <author>
    <name>bluebox</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决mybatis中resultMap使用association和collection错误去重的问题</title>
    <link href="https://bluebox.org.cn/2018-10-09-Solve-the-problem-of-using-the-association-i-the-resultMap-of-mybatis/"/>
    <id>https://bluebox.org.cn/2018-10-09-Solve-the-problem-of-using-the-association-i-the-resultMap-of-mybatis/</id>
    <published>2018-10-09T12:21:20.000Z</published>
    <updated>2018-10-10T01:03:50.669Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>问题描述: 在使用mybatis查询数据的时候, 由于没有正确的使用<code>resultMap</code>, 导致sql语句查询的总条数比展示出来的数据条数要多. 表现出来就是使一些数据丢死了. 由于没有任何有用的日志打印出来, 用了半天才定位到是<code>resultMap</code>错误去重导致的问题.</p></blockquote><a id="more"></a><p>原来的<code>resultMap</code>是这样的(与关键点无关的代码就不放出来了):</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"MajorNodeBindDetailsResultMap"</span> <span class="attr">type</span>=<span class="string">"com.thgy.udevforums.business.majorNode.Model.MajorNodeBindDetailsVo"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"status"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> <span class="attr">property</span>=<span class="string">"status"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"majorNodeBindVo"</span> <span class="attr">resultMap</span>=<span class="string">"MajorNodeBindResultMap"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"authenticationVo"</span> <span class="attr">resultMap</span>=<span class="string">"AuthenticationResultMap"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"majorNodeApplyVo"</span> <span class="attr">resultMap</span>=<span class="string">"MajorNodeApplyResultMap"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><p>由于正好<code>association</code>之外只有一个<code>status</code>字段, 且这个字段重复率极高, 才轻易发现了这个bug, 尽管几个<code>VO</code>里面的数据不一样, 但是检查数据是否重复的时候并没有把里面的数据作为判断依据, 导致数据丢失. 找了好多错误方向之后终于看到了<a href="https://www.codetd.com/article/2850307" target="_blank" rel="noopener">这篇文章</a>, 虽然觉得这种解决方法并不完美, 因为我3个vo的map里面的字段都一个个拿出来会死人的~_~, 但是终于还是从标题找到了一个关键点<code>association“错误”去除重复数据</code> , 就再也不用漫无目的的去找答案了. 所以我去找了<code>resultMap</code>中<code>association</code>的使用方法, 在<a href="https://blog.csdn.net/ilovejava_2010/article/details/8180521" target="_blank" rel="noopener">https://blog.csdn.net/ilovejava_2010/article/details/8180521</a>中看到了以下关键信息, 加上<code>id</code>元素作为<code>resultMap</code>的唯一标识:</p><blockquote><p> <strong>重点提示:*</strong>id*元素在嵌套结果映射中扮演了非常重要的角色，您应该总是指定一个或多个属性来唯一标识这个结果集。事实上，如果您没有那样做，MyBatis也会工作，但是会导致严重性能开销。选择尽量少的属性来唯一标识结果，而使用主键是最明显的选择（即使是复合主键）。</p></blockquote><p>修改之后的<code>resultMap</code>是这样的:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"MajorNodeBindDetailsResultMap"</span> <span class="attr">type</span>=<span class="string">"com.thgy.udevforums.business.majorNode.Model.MajorNodeBindDetailsVo"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"user_id"</span> <span class="attr">property</span>=<span class="string">"userId"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"status"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> <span class="attr">property</span>=<span class="string">"status"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"majorNodeBindVo"</span> <span class="attr">resultMap</span>=<span class="string">"MajorNodeBindResultMap"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"authenticationVo"</span> <span class="attr">resultMap</span>=<span class="string">"AuthenticationResultMap"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"majorNodeApplyVo"</span> <span class="attr">resultMap</span>=<span class="string">"MajorNodeApplyResultMap"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><p>至此, 完美解决这个困扰了半天无头绪的bug, 当然, 也要顺手给<code>VO</code>中的<code>resultMap</code>加上<code>id</code>元素.</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;问题描述: 在使用mybatis查询数据的时候, 由于没有正确的使用&lt;code&gt;resultMap&lt;/code&gt;, 导致sql语句查询的总条数比展示出来的数据条数要多. 表现出来就是使一些数据丢死了. 由于没有任何有用的日志打印出来, 用了半天才定位到是&lt;code&gt;resultMap&lt;/code&gt;错误去重导致的问题.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="mybatis" scheme="https://bluebox.org.cn/tags/mybatis/"/>
    
      <category term="association" scheme="https://bluebox.org.cn/tags/association/"/>
    
      <category term="resultMap" scheme="https://bluebox.org.cn/tags/resultMap/"/>
    
      <category term="错误去重" scheme="https://bluebox.org.cn/tags/%E9%94%99%E8%AF%AF%E5%8E%BB%E9%87%8D/"/>
    
  </entry>
  
  <entry>
    <title>gradle学习笔记</title>
    <link href="https://bluebox.org.cn/2018-09-27-gradle-notes/"/>
    <id>https://bluebox.org.cn/2018-09-27-gradle-notes/</id>
    <published>2018-09-27T13:49:42.000Z</published>
    <updated>2018-10-10T01:14:32.233Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>maven 和 gradle 作为java的项目构建工具, 两者各有优缺点, 就我个人感觉而言, 觉得maven这种xml格式的上手比较容易, 新手看几条命令也能很容易的理解要表达的意思, 而 gradle 用的脚本语言, 可能需要一定的学习成本, 但是表现力更为强大. 这次由于要学习springcloud要使用多项目构建, 就来学习一下在这边面更优秀的 gradle.</p></blockquote><a id="more"></a><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><ul><li><a href="https://www.w3cschool.cn/gradle/9b5m1htc.html" target="_blank" rel="noopener">https://www.w3cschool.cn/gradle/9b5m1htc.html</a></li></ul><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><ul><li><p><code>compile</code></p><p>用来编译项目源代码的依赖.</p></li><li><p><code>runtime</code></p><p>在运行时被生成的类使用的依赖. 默认的, 也包含了编译时的依赖.</p></li><li><p><code>testCompile</code></p><p>编译测试代码的依赖. 默认的, 包含生成的类运行所需的依赖和编译源代码的依赖.</p></li><li><p><code>testRuntime</code></p><p>运行测试所需要的依赖. 默认的, 包含上面三个依赖.</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;maven 和 gradle 作为java的项目构建工具, 两者各有优缺点, 就我个人感觉而言, 觉得maven这种xml格式的上手比较容易, 新手看几条命令也能很容易的理解要表达的意思, 而 gradle 用的脚本语言, 可能需要一定的学习成本, 但是表现力更为强大. 这次由于要学习springcloud要使用多项目构建, 就来学习一下在这边面更优秀的 gradle.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="gradle" scheme="https://bluebox.org.cn/tags/gradle/"/>
    
  </entry>
  
  <entry>
    <title>springcloud学习笔记</title>
    <link href="https://bluebox.org.cn/2018-09-27-springcloud-note/"/>
    <id>https://bluebox.org.cn/2018-09-27-springcloud-note/</id>
    <published>2018-09-27T13:23:03.000Z</published>
    <updated>2018-10-10T01:10:53.490Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这段时间在学springcloud, 这里开一篇用来记录学习的过程中遇到的问题以及心得体会, 方便以后自己查阅, 是一片笔记式的文章.</p></blockquote><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这段时间在学springcloud, 这里开一篇用来记录学习的过程中遇到的问题以及心得体会, 方便以后自己查阅, 是一片笔记式的文章.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>利用hexo搭建个人静态博客</title>
    <link href="https://bluebox.org.cn/2018-09-16-User_Pages_by_Hexo/"/>
    <id>https://bluebox.org.cn/2018-09-16-User_Pages_by_Hexo/</id>
    <published>2018-09-16T13:49:42.000Z</published>
    <updated>2018-10-10T01:55:19.486Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前一直想搭一个个人博客, 由于各种原因搁置了. 这次无意中看到<code>github pages</code>的妙用, 趁着热情还没散去赶紧动手搭建了一个, 作为一个后端菜鸡程序员, 折腾这么一个前端也是踩了不少坑. 包括安装部署以及一些个性化的配置, 这里记录一下, 作为<code>Hello World</code>. </p></blockquote><a id="more"></a><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><blockquote><p>说到安装环境就要在这里啰嗦下, 开始是用的<code>github</code>推荐的<code>jekyll</code>, 还要安装<code>ruby</code>, 找到<code>next</code>主题的过程中了解到了<code>hexo</code>, 果断换了, 这个不会还可以找个队友问下. 就是这么一个过程就导致了我误解了这个流程. 由于<code>github</code>上<code>next</code>的文档有点歧义, 导致我直接下载主题之后在主题的根目录下运行<code>hexo server</code>.由于第一次接触<code>node</code>, 这里就直接怀疑人生了, 由于文是框架快完工的时候写的, 所以有些坑可能就忘了.  </p></blockquote><ol><li><p>安装<code>node</code>. </p></li><li><p>在命令行执行<code>npm install -g hexo-cli</code> 安装<code>Hexo</code></p></li><li><p>执行<code>hexo init</code> 初始化项目</p></li><li><p>在项目根目录执行<code>npm install</code> 安装项目依赖</p><blockquote><p>到这里环境算是搭建好了, 可以执行<code>hexo s -g</code> 然后去浏览器访问<code>localhost:4000</code>查看效果. 具体的可以查看<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官网</a></p></blockquote></li><li><p>更换主题, 你可以把主题下载到你项目的<code>themes</code>目录下面, 然后修改项目根目录下面的配置文件<code>_config.yml</code>中的<code>theme</code>字段为 你下载下来的主题文件夹名, 注意<code>theme</code>后面必须要有空格. 我装的是<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">Next</a></p></li></ol><h2 id="hexo-部署到github-和coding"><a href="#hexo-部署到github-和coding" class="headerlink" title="hexo 部署到github 和coding"></a><code>hexo</code> 部署到<code>github</code> 和<code>coding</code></h2><blockquote><p>博客我原本是放在<code>github</code>上, 但是由于访问速度比较慢, 还有百度并不能收录到<code>github</code> 的内容, 然后就把<code>coding</code> 作为国内访问, 毕竟配置好了之后更新文章和只放<code>github</code>没区别. </p></blockquote><h3 id="配置ssh公钥"><a href="#配置ssh公钥" class="headerlink" title="配置ssh公钥"></a>配置<code>ssh</code>公钥</h3><blockquote><p>这步是必须的,  填的邮箱最好是<code>github</code>和<code>coding</code>公用的邮箱, 一个公钥就能在几个地方使用</p></blockquote><ol><li><p>执行以下命令(邮箱换成你自己的), 期间按三次回车, 密码不用设置, 不然每次都要输入密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "blueboxh@163.com"</span><br></pre></td></tr></table></figure></li><li><p>用以下命令检查是否生成成功( <code>windows</code> 用 <code>powershell</code>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></li><li><p>把上一步输出的公钥加入<code>github</code>和<code>coding</code>上的<code>ssh key</code> 中(从设置进入)</p></li><li><p>在终端输入以下命令, 添加主机到本机<code>ssh</code> 可信列表, 你也可以直接执行一个<code>git</code> 操作, 手动建立信任</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T git@coding.net</span><br></pre></td></tr></table></figure><blockquote><p>这里遇到一个问题, 如下图所示. 可以用直接在<code>coding.net</code>上<code>clone</code>一个项目来代替<code>ssh -T git@coding.net</code>向<code>known_hosts</code>添加信任.<br>  <img src="../resources/images/hexo-coding-error.png" alt="tu">  </p></blockquote></li></ol><h3 id="hexo-部署到gibhub-master分支存博客-source分支存源码"><a href="#hexo-部署到gibhub-master分支存博客-source分支存源码" class="headerlink" title="hexo 部署到gibhub, master分支存博客, source分支存源码"></a><code>hexo</code> 部署到<code>gibhub</code>, <code>master</code>分支存博客, <code>source</code>分支存源码</h3><blockquote><p>利用分支同时保留博客静态文件和源代码, 由于我会在公司和家里写博客, 所以方便在不同电脑之间同步就很重要了. 可以把代码放在<code>source</code>分支, 这样没有写完的文章等可以直接传上去, 静态博客自动部署在<code>master</code>分支, 这样就两不耽误. 需要注意的是, 不要手动修改<code>master</code>分支的内容, 否则下次部署又重新覆盖掉了.</p></blockquote><ol><li><p>新建一个 <code>gubhub</code>仓库, 项目名 <strong>一定要叫<code>UserName.github.io</code></strong> 其中<code>UserName</code>为你的<code>github</code>用户名.</p><blockquote><p>敲重点: 开始我开到别人说我也不信, 页面也能访问到也就没在意, 一抓包发现发现怎么也加载不出<code>css</code>等文件, 域名也是<code>UserName.github.io</code>, 应该是域名和仓库名需要对应. 这种格式的仓库为<code>User Pages</code>, 和普通仓库还有一个不同的地方就是这种仓库的<code>pages</code>只能放在<code>master</code>分支, 普通仓库的<code>pages</code>可以一般可以放在<code>gh-pages</code>分支. 这样就导致了一个很烦人的问题, 进入仓库的时候主分支没有<code>readme</code>, 他会很显眼的提示你加上, 你加上之后又会给你渲染成很丑的样子, 要么就是每次生成都要重新手动加入<code>public</code>文件夹里面, 这是要逼死强迫症啊. 还好<a href="#skip_render"><span id="skip_render_back">解决了~~</span></a></p></blockquote></li><li><p>安装<code>git</code></p></li><li><p>在项目根目录执行<code>git init</code>初始化本地<code>git</code>仓库</p></li><li><p>编辑<code>.gitignore</code>文件, 避免把一些依赖和代码自动生成的文件传到<code>github</code>上, 我的文件如下</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">package-lock.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line"></span><br><span class="line">.git/</span><br><span class="line">.idea/</span><br></pre></td></tr></table></figure></li><li><p>到项目根目录分别执行以下命令: (git不熟可以看看<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">git教程</a>)</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 创建并切换分支</span><br><span class="line">git checkout -b source</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin git@github.com:blueboxH/blueboxh.github.io.git</span><br><span class="line">git push -u origin source</span><br></pre></td></tr></table></figure><blockquote><p>把其中的<code>blueboxH</code>换成你的用户名, 到这里你就把源码推送到了服务器的<code>source</code>分支, <code>master</code>分支不用手动推送, 最后要是推送不上去按照提示操作强制推送分支就好了. 不能推送的话检查<code>ssh</code>公钥配置是否有误</p></blockquote></li><li><p>在项目根目录<code>_config.yml</code>中<code>deploy</code>字段配置如下:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:blueboxH/blueboxh.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>执行<code>hexo g -d</code> 将自动生成后的文件自动部署到<code>master</code>分支. </p></li><li><p>去你的仓库设置检查<code>github pages</code>配置. 按以上步骤操作的话应该会自动设置好. 可以点击上面显示的链接访问你的站点了. </p></li></ol><h3 id="hexo-部署到coding"><a href="#hexo-部署到coding" class="headerlink" title="hexo 部署到coding"></a><code>hexo</code> 部署到<code>coding</code></h3><blockquote><p>由于源代码已经在<code>github</code>仓库了, 所以没必要再放到<code>coding</code>, 直接部署静态博客到<code>coding</code>上就好了.</p></blockquote><ol><li><p>注册<code>coding</code>账号, 升级成为银牌会员. 创建名为<code>username</code>的仓库, 仓库名字和用户名相同. (不同怎么样我也没试过~~) 仓库需要设置为公开源代码(新版). </p></li><li><p>配置项目根目录下<code>_config.yml</code>文件, 如下: (我的用户名为<code>blueboxH</code>, 这个根据个人情况修改)</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> </span><br><span class="line"><span class="attr">    github:</span> <span class="string">git@github.com:blueboxH/blueboxh.github.io.git</span></span><br><span class="line"><span class="attr">    coding:</span> <span class="string">git@git.coding.net:blueboxH/blueboxH.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li><li><p>执行<code>hexo g -d</code> 将自动生成后的文件自动部署到<code>github</code>和<code>coding</code>的<code>master</code>分支. </p><blockquote><p>要是这里部署不成功的话(<code>master</code>分支没有文件), 请检查<code>ssh</code>公钥配置. </p></blockquote></li><li><p>在 <code>代码</code> &gt; <code>pages服务</code>中点击设置<code>一键开启静态pages</code></p></li></ol><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><blockquote><p>之所以把绑定域名单独提出来, 是因为这里有坑. 还有妙用, 如果你只是把项目放在一个仓库里, 那绑定域名只是一个可有可无的操作, 但是当你把博客同时部署在<code>github</code>和<code>coding</code>上的时候, 这能给你带来很多方便. 比如, 百度和谷歌收录不用再根据域名单独配置了, 同一个域名就可以访问部署在两个地方的博客. 域名解析可以把同一个域名根据访问<code>ip</code>不同分别解析到<code>github</code>或<code>coding</code>上, 只需要把解析到<code>github</code>的线路设置为海外即可, 你也可以把<code>www</code>前缀的域名解析到<code>coding</code>上(<code>github</code>不可以解析多个域名), 毕竟还是有一些人错误的认为域名必须要加<code>www</code>, 虽然猿类犯这种错的几率不大~~</p></blockquote><p><a href="http://zhanghao.studio/%E6%8F%90%E5%8D%87%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6.html" target="_blank" rel="noopener">参考链接</a></p><p>这个很简单, 就如上文所操作, 只不过有两个地方需要注意,</p><ul><li>一个就是公钥不需要两个, 邮箱相同, 同一个公钥可以在两个仓库设置.</li><li>去掉<code>coding</code>广告的时候需要回到旧版才能看到<code>Hosted by Coding Pages</code>选项</li></ul><h2 id="hexo有层次的分类-TOC"><a href="#hexo有层次的分类-TOC" class="headerlink" title="hexo有层次的分类(TOC)"></a><code>hexo</code>有层次的分类(TOC)</h2><h2 id="hexo-SEO"><a href="#hexo-SEO" class="headerlink" title="hexo SEO"></a><code>hexo</code> SEO</h2><blockquote><p>你的博客部署上去了, 但是此时你并不能通过<code>google</code>或者<code>百度</code>搜索到你的博客, 因为你没有去他们那里登记~~. 你<strong>首先</strong>得向他们证明这个博客是你的, 这个时候就能体会到分别部署在两个地方的时候用属于自己的独立域名的好处了, 你可以用域名解析的方式方便的证明这个网站是你的, 不然两个部署在两个地方用两个不同的域名, 操作起来很麻烦.  <strong>然后</strong>你再分别提交站点地图.  这里我就没什么好说的了, 并没有什么独特的见解, 网上教程大把. 不过还是期待以后有时间能丰富这个模块. 所以单独留出来占个坑</p></blockquote><ol><li><p>安装sitemap站点地图自动生成插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure></li><li><p>在项目根目录<code>_config.yml</code>下作如下配置:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sitemap:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">resources/sitemap.xml</span></span><br><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">resources/baidusitemap.xml</span></span><br></pre></td></tr></table></figure><blockquote><p>之所以不配置在主题目录是因为配置在这换主题的话不用改, 且这个和主题无关</p></blockquote></li><li><p>在项目根目录<code>_config.yml</code>下修改域名:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## 如果你的站点用的子目录(比子域名更有利于SEO), 设置 url 为 'https://bluebox.org.cn/blog' ,设置 root 为 '/blog/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://bluebox.org.cn</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure></li><li><p>执行<code>hexo g</code>生成静态文件, 你会发现 public/resource下面多了两个文件<code>sitemap.xml</code>和baidusitemap.xml`</p></li><li><p>添加<code>robot</code>协议, 在<code>source\resources</code>下面新建<code>robot.txt</code>文件, 内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># hexo robots.txt</span><br><span class="line">User-agent: *</span><br><span class="line">Allow: /</span><br><span class="line">Allow: /archives/</span><br><span class="line"></span><br><span class="line">Disallow: /vendors/</span><br><span class="line">Disallow: /js/</span><br><span class="line">Disallow: /css/</span><br><span class="line">Disallow: /fonts/</span><br><span class="line">Disallow: /vendors/</span><br><span class="line">Disallow: /fancybox/</span><br><span class="line"></span><br><span class="line">Sitemap: https://bluebox.org.cn/resources/sitemap.xml</span><br><span class="line">Sitemap: https://bluebox.org.cn/resources/baidusitemap.xml</span><br></pre></td></tr></table></figure></li><li><p><a href="http://www.arao.me/2015/hexo-next-theme-optimize-seo/#u7ED9_u975E_u53CB_u60C5_u94FE_u63A5_u7684_u51FA_u7AD9_u94FE_u63A5_u6DFB_u52A0__u201Cnofollow_u201D__u6807_u7B7E" target="_blank" rel="noopener">给非友情链接的出站链接添加 “nofollow” 标签</a>   (todo)</p></li><li><p>验证站点   (todo)</p></li><li><p>提交sitemap  (todo)</p></li></ol><h2 id="hexo填坑"><a href="#hexo填坑" class="headerlink" title="hexo填坑"></a><code>hexo</code>填坑</h2><h3 id="hexo不渲染README文件的方法"><a href="#hexo不渲染README文件的方法" class="headerlink" title="hexo不渲染README文件的方法"></a><a href="#skip_render_back" title="back"><span id="skip_render"><code>hexo</code>不渲染<code>README</code>文件的方法</span></a></h3><p>  在项目根目录下<code>_config.yml</code>文件中配置如下配置:<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: README.md</span><br></pre></td></tr></table></figure></p><h2 id="todo"><a href="#todo" class="headerlink" title="todo"></a>todo</h2><ul><li><p>怎么默认 source 分支</p></li><li><p>readme</p></li><li><p>代码复制粘贴插件</p></li><li><p>1, 2级标题居中显示</p></li><li><p>评论收到邮件提醒的时候并不能跳转到指定文章指定评论</p></li><li><p>加载较慢, 需要优化</p></li><li><p>logo 不能展示出来</p></li><li><p>hexo-autonofollow</p></li></ul><ul><li style="list-style: none"><input type="checkbox"> zen</li><li style="list-style: none"><input type="checkbox"> test</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;之前一直想搭一个个人博客, 由于各种原因搁置了. 这次无意中看到&lt;code&gt;github pages&lt;/code&gt;的妙用, 趁着热情还没散去赶紧动手搭建了一个, 作为一个后端菜鸡程序员, 折腾这么一个前端也是踩了不少坑. 包括安装部署以及一些个性化的配置, 这里记录一下, 作为&lt;code&gt;Hello World&lt;/code&gt;. &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://bluebox.org.cn/tags/hexo/"/>
    
      <category term="User Pages" scheme="https://bluebox.org.cn/tags/User-Pages/"/>
    
      <category term="SEO" scheme="https://bluebox.org.cn/tags/SEO/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://bluebox.org.cn/2018-09-13-Hello%20World/"/>
    <id>https://bluebox.org.cn/2018-09-13-Hello World/</id>
    <published>2018-09-13T04:37:16.924Z</published>
    <updated>2018-09-18T04:34:42.453Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="标签测试1" scheme="https://bluebox.org.cn/tags/%E6%A0%87%E7%AD%BE%E6%B5%8B%E8%AF%951/"/>
    
      <category term="标签测试2" scheme="https://bluebox.org.cn/tags/%E6%A0%87%E7%AD%BE%E6%B5%8B%E8%AF%952/"/>
    
  </entry>
  
</feed>
